
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_tutorials/i-classes/plot_iii_image_container.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_auto_tutorials_i-classes_plot_iii_image_container.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_tutorials_i-classes_plot_iii_image_container.py:


Storing imaging data
--------------------------------------

The management of imaging Raman spectroscopic data in `RamanSPy` is guided through the :class:`ramanspy.SpectralImage` class.

.. seealso:: As the :class:`ramanspy.SpectralImage` class extends the :class:`ramanspy.SpectralContainer` class, most of its
             functionality is inherited from this class. Hence, users are advised to first check the documentation of
             the :class:`ramanspy.SpectralImage` class and the :ref:`Generic data container` tutorial.

Below, we will inspect some of the main features the :class:`ramanspy.SpectralImage` class provides on top of those inherited
through the :class:`ramanspy.SpectralContainer` class.

.. GENERATED FROM PYTHON SOURCE LINES 14-18

.. code-block:: default

    import numpy as np
    import ramanspy









.. GENERATED FROM PYTHON SOURCE LINES 19-22

We can define a spectral image by providing the relevant 3D intensity data array and the corresponding Raman wavenumber
axis, just as we initialise :class:`ramanspy.SpectralContainer` instances. As an example, we will create a 50x50 spectroscopic
image, each point of which contains a Raman spectrum containing 1500 spectral points.

.. GENERATED FROM PYTHON SOURCE LINES 22-27

.. code-block:: default

    spectral_data = np.random.rand(50, 50, 1500)
    spectral_axis = np.linspace(100, 3600, 1500)

    raman_image = ramanspy.SpectralImage(spectral_data, spectral_axis)








.. GENERATED FROM PYTHON SOURCE LINES 28-29

Then, we can use all features of the :class:`ramanspy.SpectralContainer` class as usual. For instance,

.. GENERATED FROM PYTHON SOURCE LINES 29-31

.. code-block:: default

    raman_image.shape





.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    (50, 50)



.. GENERATED FROM PYTHON SOURCE LINES 32-35

At the moment, the only functionality the :class:`ramanspy.SpectralImage` class provides over :class:`ramanspy.SpectralContainer`
is the highly-customisable :meth:`ramanspy.SpectralImage.plot`, which can be used to quickly visualise spectral slices
across Raman spectroscopic images.

.. GENERATED FROM PYTHON SOURCE LINES 35-39

.. code-block:: default


    # spectral slices across 1500 cm^-1 and 2500 cm^-1
    raman_image.plot(bands=[1500, 2500])




.. rst-class:: sphx-glr-horizontal


    *

      .. image-sg:: /auto_tutorials/i-classes/images/sphx_glr_plot_iii_image_container_001.png
         :alt: Raman image
         :srcset: /auto_tutorials/i-classes/images/sphx_glr_plot_iii_image_container_001.png
         :class: sphx-glr-multi-img

    *

      .. image-sg:: /auto_tutorials/i-classes/images/sphx_glr_plot_iii_image_container_002.png
         :alt: Raman image
         :srcset: /auto_tutorials/i-classes/images/sphx_glr_plot_iii_image_container_002.png
         :class: sphx-glr-multi-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    [<Axes: title={'center': 'Raman image'}>, <Axes: title={'center': 'Raman image'}>]



.. GENERATED FROM PYTHON SOURCE LINES 40-41

We can also plot individual spectra within the image using indexing and :class:`ramanspy.Spectrum`'s plot method.

.. GENERATED FROM PYTHON SOURCE LINES 41-42

.. code-block:: default

    raman_image[25, 25].plot()



.. image-sg:: /auto_tutorials/i-classes/images/sphx_glr_plot_iii_image_container_003.png
   :alt: Raman spectra
   :srcset: /auto_tutorials/i-classes/images/sphx_glr_plot_iii_image_container_003.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    <Axes: title={'center': 'Raman spectra'}, xlabel='Raman shift (cm$^{{{-1}}}$)', ylabel='Intensity (a.u.)'>




.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.190 seconds)


.. _sphx_glr_download_auto_tutorials_i-classes_plot_iii_image_container.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example




    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: plot_iii_image_container.py <plot_iii_image_container.py>`

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: plot_iii_image_container.ipynb <plot_iii_image_container.ipynb>`
