
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_tutorials/iv-viz/plot_ii_peaks.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_auto_tutorials_iv-viz_plot_ii_peaks.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_tutorials_iv-viz_plot_ii_peaks.py:


Visualising peaks
======================

We can visualise the peaks in a spectrum by using the :meth:`ramanspy.plot.peaks` method.

.. GENERATED FROM PYTHON SOURCE LINES 8-16

.. code-block:: default



    import ramanspy

    dir_ = r'../../../../data/kallepitis_data'

    volumes = ramanspy.datasets.volumetric_cells(cell_type='THP-1', folder=dir_)








.. GENERATED FROM PYTHON SOURCE LINES 20-21

We will use the first volume of the dataset, which is a 3D image of a cell.

.. GENERATED FROM PYTHON SOURCE LINES 21-23

.. code-block:: default

    cell_volume = volumes[0]








.. GENERATED FROM PYTHON SOURCE LINES 24-25

We will use the sixth layer (given by index 5) of the volume as an example spectral image.

.. GENERATED FROM PYTHON SOURCE LINES 25-27

.. code-block:: default

    cell_layer = cell_volume.layer(5)








.. GENERATED FROM PYTHON SOURCE LINES 28-29

We will select a specific spectra from the image.

.. GENERATED FROM PYTHON SOURCE LINES 29-31

.. code-block:: default

    selected_spectrum = cell_layer[20, 30]








.. GENERATED FROM PYTHON SOURCE LINES 32-33

We will first preprocess the spectral spectrum

.. GENERATED FROM PYTHON SOURCE LINES 33-42

.. code-block:: default

    preprocessing_pipeline = ramanspy.preprocessing.Pipeline([
        ramanspy.preprocessing.misc.Cropper(region=(500, 1800)),
        ramanspy.preprocessing.despike.WhitakerHayes(),
        ramanspy.preprocessing.denoise.SavGol(window_length=7, polyorder=3),
        ramanspy.preprocessing.baseline.ASLS(),
        ramanspy.preprocessing.normalise.MinMax(pixelwise=False),
    ])
    preprocessed_spectrum = preprocessing_pipeline.apply(selected_spectrum)








.. GENERATED FROM PYTHON SOURCE LINES 43-44

We can now visualise the peaks in the spectrum.

.. GENERATED FROM PYTHON SOURCE LINES 44-45

.. code-block:: default

    _ = ramanspy.plot.peaks(preprocessed_spectrum, prominence=0.15)



.. image-sg:: /auto_tutorials/iv-viz/images/sphx_glr_plot_ii_peaks_001.png
   :alt: Raman spectra
   :srcset: /auto_tutorials/iv-viz/images/sphx_glr_plot_ii_peaks_001.png
   :class: sphx-glr-single-img






.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.330 seconds)


.. _sphx_glr_download_auto_tutorials_iv-viz_plot_ii_peaks.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example




    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: plot_ii_peaks.py <plot_ii_peaks.py>`

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: plot_ii_peaks.ipynb <plot_ii_peaks.ipynb>`
